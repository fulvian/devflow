# .pre-commit-config.yaml
# Pre-commit configuration following PIANO_TEST_DEBUG_COMETA_BRAIN.md section 7.2
# Implements code quality and testing hooks as specified

default_language_version:
  python: python3.9

repos:
  # Black code formatter
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
        name: Format code with Black
        description: "Formats Python code according to the Black style guide"
        files: \.py$
        exclude: ^(migrations|venv|__pycache__)/
        args:
          - --line-length=88
          - --skip-string-normalization
          - --exclude=migrations

  # Ruff linting
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.0.252
    hooks:
      - id: ruff
        name: Lint with Ruff
        description: "Fast Python linting with Ruff"
        files: \.py$
        exclude: ^(migrations|venv|__pycache__)/
        args:
          - --fix
          - --exit-non-zero-on-fix

  # MyPy type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.950
    hooks:
      - id: mypy
        name: Type check with MyPy
        description: "Static type checking using MyPy"
        files: \.py$
        exclude: ^(migrations|venv|__pycache__|tests)/
        args:
          - --ignore-missing-imports
          - --warn-return-any
          - --warn-unused-configs
          - --no-namespace-packages

  # Unit test execution
  - repo: local
    hooks:
      - id: run-unit-tests
        name: Run unit tests
        description: "Execute unit tests with pytest"
        entry: python -m pytest tests/ -v
        language: system
        pass_filenames: false
        always_run: true
        files: \.py$
        exclude: ^(migrations|venv|__pycache__)/

  # Security checks with Bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        name: Security check with Bandit
        description: "Finds common security issues in Python code"
        files: \.py$
        exclude: ^(migrations|venv|__pycache__|tests)/
        args:
          - -r
          - --skip=B101,B311

  # Check for added large files
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-added-large-files
        name: Check for large files
        description: "Prevents giant files from being committed"
        args: ['--maxkb=500']

      - id: check-merge-conflict
        name: Check for merge conflicts
        description: "Checks for files that contain merge conflict strings"
        files: \.py$

      - id: check-yaml
        name: Validate YAML files
        description: "Checks yaml files for parseable syntax"
        files: \.(yaml|yml)$

      - id: end-of-file-fixer
        name: Fix end of files
        description: "Ensures that files end with a newline"
        files: \.py$

      - id: trailing-whitespace
        name: Remove trailing whitespace
        description: "Removes trailing whitespace at end of lines"
        files: \.py$

# Configuration for pre-commit.ci
ci:
  autofix_commit_msg: "fix: auto fixes from pre-commit hooks"
  autoupdate_commit_msg: "chore: pre-commit autoupdate"