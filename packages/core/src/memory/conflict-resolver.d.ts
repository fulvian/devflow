/**
 * Conflict Resolver - Operational Transforms for Cross-Platform Memory
 * Generated by Synthetic Code Agent: DEVFLOW-MEMORY-001
 * Handles concurrent edits and version conflicts
 */
import type { UniversalContextFormat } from './universal-context-format.js';
export interface ConflictResolutionStrategy {
    name: string;
    resolve(current: UniversalContextFormat, incoming: UniversalContextFormat): UniversalContextFormat;
}
export declare class ConflictResolver {
    private strategies;
    constructor();
    private registerDefaultStrategies;
    resolve(current: UniversalContextFormat, incoming: UniversalContextFormat, strategyName?: string): Promise<UniversalContextFormat>;
    registerStrategy(name: string, strategy: ConflictResolutionStrategy): void;
    getAvailableStrategies(): string[];
    private deepMerge;
    detectConflictType(current: UniversalContextFormat, incoming: UniversalContextFormat): 'version' | 'data' | 'metadata' | 'none';
}
//# sourceMappingURL=conflict-resolver.d.ts.map