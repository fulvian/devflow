/**
 * Advanced Task Router - ML-Powered Intelligent Routing
 * Generated by Synthetic Code Agent: DEVFLOW-ROUTER-001
 * Qwen 2.5 Coder 32B - 1,867 tokens processed
 */
export interface TaskClassification {
    classify(taskDescription: string): {
        type: string;
        confidence: number;
    };
}
export interface PlatformSpecializationMatrix {
    getPlatformForTask(taskType: string, constraints: any, userPreferences: any): {
        platform: string;
        agent: string;
        confidence: number;
    };
}
export interface PerformanceLearning {
    trackOutcome(taskId: string, outcome: any): void;
    adaptRouting(): void;
}
export interface MultiPlatformCoordinator {
    sendTaskToPlatform(taskId: string, platform: string, agent: string): Promise<any>;
}
export interface TaskRoutingDecision {
    platform: string;
    agent: string;
    confidence: number;
    taskId: string;
    classification: {
        type: string;
        confidence: number;
    };
}
export declare class SimpleTaskClassifier implements TaskClassification {
    private codeKeywords;
    private reasoningKeywords;
    private contextKeywords;
    classify(taskDescription: string): {
        type: string;
        confidence: number;
    };
    private calculateScore;
}
export declare class PlatformSpecializationMatrix implements PlatformSpecializationMatrix {
    private matrix;
    private getSyntheticAgentForTask;
}
export declare class PerformanceLearning implements PerformanceLearning {
    private db;
    constructor(dbPath?: string);
    private initializeDatabase;
    private updatePerformanceMetrics;
    close(): void;
}
export declare class AdvancedTaskRouter {
    private taskClassifier;
    private platformMatrix;
    private performanceLearning;
    private coordinator?;
    constructor(coordinator?: MultiPlatformCoordinator, dbPath?: string);
    route(taskDescription: string, constraints?: any, userPreferences?: any): Promise<TaskRoutingDecision>;
    private estimateQualityScore;
    private estimateCost;
    getPerformanceMetrics(): PerformanceLearning;
    close(): void;
}
//# sourceMappingURL=advanced-task-router.d.ts.map